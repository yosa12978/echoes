services:
  web:
    container_name: echoes-web
    build:
      context: .
      dockerfile: air.dockerfile
    ports:
      - "5000:80"
    depends_on:
      - postgres
      - redis
      - migrate
    environment:
      - ECHOES_POSTGRES_ADDR=echoes-postgres:5432/echoesdb?sslmode=disable
      - ECHOES_POSTGRES_USER=user
      - ECHOES_POSTGRES_PASS=1234
      - ECHOES_REDIS_ADDR=echoes-redis:6379
    networks:
      - echoes-network
    volumes:
      - ./:/app
  postgres:
    container_name: echoes-postgres
    image: postgres
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=1234
      - POSTGRES_DB=echoesdb
    volumes:
      - echoes_postgres-vol:/var/lib/postgresql/data
    networks:
      - echoes-network
  migrate:
    image: migrate/migrate
    networks:
      - echoes-network
    volumes:
      - ./migrations:/migrations
    depends_on:
      - postgres
    command:
      [
        "-path",
        "/migrations",
        "-database",
        "postgres://user:1234@echoes-postgres:5432/echoesdb?sslmode=disable",
        "up"
      ]
    links:
      - postgres
  adminer:
    container_name: echoes-adminer
    image: adminer
    ports:
      - "5001:8080"
    depends_on:
      - postgres
    networks:
      - echoes-network
  redis:
    container_name: echoes-redis
    image: redis
    networks:
      - echoes-network
    volumes:
      - echoes_cache-vol:/data

networks:
  echoes-network:
    driver: bridge

volumes:
  echoes_postgres-vol:
  echoes_cache-vol:
